# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-30 07:27
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import refundmytrain.apps.trainmovements.models.message_id_mixin
import refundmytrain.apps.trainmovements.models.train_id_mixin
import refundmytrain.libs.rail_fields


class Migration(migrations.Migration):

    dependencies = [
        ('naptan', '0001_initial'),
        ('operators', '0001_initial'),
        ('trainmovements', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainActivationMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_schedule_uid', models.CharField(db_index=True, max_length=10)),
                ('schedule_start_date', models.DateField()),
                ('schedule_end_date', models.DateField()),
                ('schedule_source', models.CharField(help_text='Set to C for schedules from CIF/ITPS, or V for schedules from VSTP/TOPS', max_length=1)),
                ('schedule_type', models.CharField(help_text='Either C (Cancellation), N (New STP), O (STP Overlay) or P (Permanent i.e. as per the WTT/LTP)', max_length=1)),
                ('train_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainmovements.TrainEntity')),
            ],
            bases=(refundmytrain.apps.trainmovements.models.message_id_mixin.MessageIDMixin, refundmytrain.apps.trainmovements.models.train_id_mixin.TrainIDMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TrainCancellationMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_location_stanox', refundmytrain.libs.rail_fields.StanoxField(help_text='For an an "OUT OF PLAN" cancellation, this is the location that the train should have been at according to the schedule.', max_length=6, validators=[django.core.validators.RegexValidator('\\d{5}\\*?')])),
                ('original_location_timestamp', models.DateTimeField(help_text='For an "OUT OF PLAN" cancellation, this is the departure time of the location that the train should have been at according to the schedule')),
                ('departure_timestamp', models.DateTimeField(help_text='The departure time at the location that the train is cancelled from (in milliseconds since the UNIX epoch)')),
                ('location_stanox', models.CharField(help_text='The STANOX of the location that the train is being cancelled from. For an "OUT OF PLAN" cancellation, this STANOX will not be in the schedule, but a Train Movement message will have already been sent.', max_length=10)),
                ('cancellaton_input_timestamp', models.DateTimeField(help_text='The time at which the cancellation was input to TRUST.')),
                ('cancellaton_reason_code', models.CharField(help_text='The reason code for the cancellation, taken from the Delay Attribution Guide', max_length=10)),
                ('cancellaton_type', models.CharField(help_text='Either "ON CALL" for a planned cancellation, "AT ORIGIN", "EN ROUTE" or "OUT OF PLAN"', max_length=10)),
                ('train_service_code', models.CharField(help_text='Train service code as per the schedule.', max_length=10)),
                ('train_file_address', models.CharField(help_text='The TOPS train file address, if applicable.', max_length=10)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='naptan.NaptanRailStation')),
                ('operating_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operators.OperatingCompany')),
                ('original_location_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='naptan.NaptanRailStation')),
                ('train_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainmovements.TrainEntity')),
            ],
            bases=(refundmytrain.apps.trainmovements.models.message_id_mixin.MessageIDMixin, refundmytrain.apps.trainmovements.models.train_id_mixin.TrainIDMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TrainReinstatementMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            bases=(refundmytrain.apps.trainmovements.models.message_id_mixin.MessageIDMixin, refundmytrain.apps.trainmovements.models.train_id_mixin.TrainIDMixin, models.Model),
        ),
    ]
